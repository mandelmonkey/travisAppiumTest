jobs:
  include:   
    - stage: android 
      os: linux
      dist: trusty
      language: android
      android:
        components:
          - platform-tools
          - tools
          - build-tools-26.0.1
          - android-26
          - extra-android-m2repository
          - sys-img-x86-android-26
          - sys-img-armeabi-v7a-android-17
        licenses:
          - 'android-sdk-preview-license-d099d938'
          - 'android-sdk-license-.+'
          - 'google-gdk-license-.+'
      cache: npm
      env: 
        - NODE_VERSION="8.16.0" PLATFORM="android" ANDROID_VERSION="28" ANDROID_API_LEVEL=28 ANDROID_BUILD_TOOLS_VERSION=28.0.3 ANDROID_ABI=armeabi-v7a
      before_install:
        - touch $HOME/.android/repositories.cfg
        - yes | sdkmanager "platforms;android-28"
        - yes | sdkmanager "build-tools;28.0.3" 
        - android list sdk --extended --no-ui --all
        - android list targets 
        - emulator -list-avds
        - echo no | android create avd -n test -t 2 --abi default/x86
         # - echo no | android create avd --force -n test -t android-28 --abi x86_64
        - emulator -avd test -no-skin -no-audio -no-window &
        - emulator -list-avds
        - android-wait-for-emulator
        - echo $JAVA_HOME  
        - echo $ANDROID_SDK 
        - echo $ANDROID_HOME 
        # - echo no | avdmanager create avd --force -n test -k "system-images;android-26;sys-img-x86_64-google_apis-25"
        - nvm install $NODE_VERSION
        - npm install -g appium mocha
        - npm install wd
        - appium --log-level info &

      install: 
        - npm install -g appcelerator titanium alloy gulp
        - npm install gulp underscore moment gulp-util xml2js cloudinary
        - ti sdk install 8.1.0.GA --no-progress-bars
        - java -version
        - echo $JAVA_HOME  
        - echo $ANDROID_SDK 
        - echo $ANDROID_HOME  
        - ti build -p android --log-level info --build-only

      before_script:
        # - gulp 'start:emulator'
        # - gulp 'config:tiapp' --test

      script: 
        - mocha androidTest.js

    - stage: ios
      language: objective-c  
      os: osx
      osx_image: xcode11.2 
      cache:
        directories:
        - $HOME/.m2
      env: 
        - NODE_VERSION="8.16.0" PLATFORM="ios" BUILD_COMMAND="ti build -p ios --build-only"
      before_install:
        - nvm install $NODE_VERSION 
        - export GOPATH=/Users/travis/go
        - export PATH=$GOPATH/bin:$PATH 
        - open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app 

      install: 
        - npm install -g appium
        - npm install -g mocha
        - npm install wd 
        - appium --log-level info &
        - go get -u golang.org/x/tools/...
        - go get -u -v github.com/halseth/falafel
        - go get golang.org/x/mobile/cmd/gomobile
        - gomobile init
        - npm install -g appcelerator titanium alloy underscore
        - ti sdk install latest --no-progress-bars
        - ti sdk install 8.1.0.GA --no-progress-bars  
        - ./CreateFrameworks
        - ti clean
        - ti build -p ios --log-level info --build-only
        - echo "build succeded"

      before_script:
        # - gulp 'start:emulator'
        # - gulp 'config:tiapp' --test

      script:
        - mocha tests.js

notifications:
  email:
    - chris@nayuta.io